name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.0]
        laravel: [8.*]
        stability: [prefer-stable]
        include:
          - laravel: 8.*
            testbench: 6.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Copy ENV Laravel Configuration for CI
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Install NPM Dependencies
        run: yarn install

      - name: Compile Assets
        run: yarn run production

      - name: Generate Key
        run: php artisan key:generate

      - name: PHP-CS-Fixer
        run: vendor/bin/php-cs-fixer fix --verbose --diff --dry-run --stop-on-violation --using-cache=no

      - name: PHPStan
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon.dist --memory-limit=512M

      - name: PHPInsights
        run: vendor/bin/phpinsights --no-interaction --min-quality=90 --min-complexity=80 --min-architecture=85 --min-style=95

      - name: Execute tests
        run: vendor/bin/phpunit
